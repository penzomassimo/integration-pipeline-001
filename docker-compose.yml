
version: "3.9"

services:

  postgresdb-app-1-svc:
    image: postgres:latest
    container_name: postgresdb-app-1-svc
    restart: ${RESTART_POLICY}
    environment: 
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: db-1
    ports:
      - target: 5432
        host_ip: 127.0.0.1
        published: 5432
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: postgresdb-app-1-svc-vol-01
        target: /var/lib/postgresql/data
        read_only: false
        volume:
          nocopy: false
    networks:
      default:
        ipv4_address: 172.16.238.10



  postgresdb-app-2-svc:
    image: postgres:latest
    container_name: postgresdb-app-2-svc
    restart: ${RESTART_POLICY}
    environment: 
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: db-1
    ports:
      - target: 5432
        host_ip: 127.0.0.1
        published: 5433
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: postgresdb-app-2-svc-vol-01
        target: /var/lib/postgresql/data
        read_only: false
        volume:
          nocopy: false
    networks:
      default:
          ipv4_address: 172.16.238.20



  postgresdb-app-3-svc:
    image: postgres:latest
    container_name: postgresdb-app-3-svc
    restart: ${RESTART_POLICY}
    environment: 
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: db-1
    ports:
      - target: 5432
        host_ip: 127.0.0.1
        published: 5434
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: postgresdb-app-3-svc-vol-01
        target: /var/lib/postgresql/data
        read_only: false
        volume:
          nocopy: false
    networks:
      default:
          ipv4_address: 172.16.238.30



  postgresdb-app-4-svc:
    image: postgres:latest
    container_name: postgresdb-app-4-svc
    restart: ${RESTART_POLICY}
    environment: 
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: db-1
    ports:
      - target: 5432
        host_ip: 127.0.0.1
        published: 5435
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: postgresdb-app-4-svc-vol-01
        target: /var/lib/postgresql/data
        read_only: false
        volume:
          nocopy: false
    networks:
      default:
        ipv4_address: 172.16.238.40



  nifi-zookeeper-svc:
    image: zookeeper:latest
    container_name: nifi-zookeeper-svc
    restart: ${RESTART_POLICY}
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      default:
        ipv4_address: 172.16.238.60



  nifi-registry-svc:
    build:
      context: ./nifi-registry-svc
      dockerfile: nifi-registry-svc.Dockerfile
    container_name: nifi-registry-svc
    restart: ${RESTART_POLICY}
    ports:
      - target: 18080
        host_ip: 127.0.0.1
        published: 18080
        protocol: tcp
        mode: host
    # environment:
    #   LOG_LEVEL: INFO
    #   NIFI_REGISTRY_DB_DIR: /opt/nifi-registry/nifi-registry-current/database
    #   NIFI_REGISTRY_FLOW_PROVIDER: file
    #   NIFI_REGISTRY_FLOW_STORAGE_DIR: /opt/nifi-registry/nifi-registry-current/flow_storage
    volumes:
      - type: volume
        source: nifi-registry-svc-vol-01
        target: /opt/nifi-registry/nifi-registry-current
        read_only: false
        volume:
          nocopy: false
    networks:
      default:
        ipv4_address: 172.16.238.70



  nifi-svc:
    image: apache/nifi:latest
    container_name: nifi-svc
    restart: ${RESTART_POLICY}
    ports:
      - target: 8080
        host_ip: 127.0.0.1
        published: 8091
        protocol: tcp
        mode: host
    environment:
      NIFI_WEB_HTTP_PORT: 8080
      NIFI_CLUSTER_IS_NODE: true
      NIFI_CLUSTER_NODE_PROTOCOL_PORT: 8082
      NIFI_ZK_CONNECT_STRING: nifi-zookeeper-svc:2181
      NIFI_ELECTION_MAX_WAIT: 30 sec
      NIFI_SENSITIVE_PROPS_KEY: '12345678901234567890A'
    volumes:
      - type: volume
        source: nifi-svc-vol-01
        target: /opt/nifi-registry/nifi-registry-current
        read_only: false
        volume:
          nocopy: false
    networks:
      default:
        ipv4_address: 172.16.238.80



  vsftp-svc:
    image: fauria/vsftpd:latest
    container_name: vsftp-svc
    restart: ${RESTART_POLICY}
    environment:
      FTP_USER: adminuser
      FTP_PASS: adminpass
      PASV_ENABLE: NO
      # PASV_ADDRESS: 127.0.0.1
      # PASV_MIN_PORT: 21100
      # PASV_MAX_PORT: 21110
    volumes:
      - type: volume
        source: vsftp-svc-vol-01
        target: /home/vsftpd
        read_only: false
        volume:
          nocopy: false
      - type: volume
        source: vsftp-svc-vol-02
        target: /var/log/vsftpd
        read_only: false
        volume:
          nocopy: false
      - type: volume
        source: vsftp-svc-vol-03
        target: /etc/vsftp
        read_only: false
        volume:
          nocopy: false
    ports:
      - target: 20
        host_ip: 127.0.0.1
        published: 20
        protocol: tcp
        mode: host
      - target: 21
        host_ip: 127.0.0.1
        published: 21
        protocol: tcp
        mode: host
    networks:
      default:
          ipv4_address: 172.16.238.90



networks:
  default:
    name: project-network
    ipam:
      driver: default
      config:
        - subnet: "172.16.238.0/24"

volumes:
  postgresdb-app-1-svc-vol-01:
  postgresdb-app-2-svc-vol-01:
  postgresdb-app-3-svc-vol-01:
  postgresdb-app-4-svc-vol-01:
  pgadmin-svc-vol-01:
  nifi-registry-svc-vol-01:
  nifi-svc-vol-01:
  vsftp-svc-vol-01:
  vsftp-svc-vol-02:
  vsftp-svc-vol-03:


# configs:
#   http_config:
#     file: ./httpd.conf

# secrets:
#   server-certificate:
#     file: ./server.cert